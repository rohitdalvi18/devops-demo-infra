name: UAT Pipeline

on:
  workflow_run:
    workflows: ["QA Pipeline"]
    types: [completed]
  # allow manual re-runs if needed
  workflow_dispatch:

env:
  AWS_REGION:     us-east-1
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_DEFAULT_REGION: us-east-1
  ECR_REGISTRY:   ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
  CLUSTER_NAME:   devops-demo
  IMAGE_TAG:      nightly-${{ github.event.workflow_run.run_number }}

jobs:
  await-approval:
    # only run when QA succeeded
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Pause for manual approval üõë
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: rgdalvi            # GitHub username of the approver
          minimum-approvals: 1
          issue-title: "Approve UAT Deployment"
          issue-body: |
            The QA pipeline has completed successfully and is ready for UAT promotion.

            ‚Ä¢ QA run details:  
              ${{ github.event.workflow_run.html_url }}

            ‚Ä¢ Nightly run details (from QA context):  
              ${{ fromJson(github.event.workflow_run.workflow_run.previous_run).html_url || 'N/A' }}

            üü¢ Please comment "approved" or "lgtm" or "yes" to continue!  
            
            üî¥ If you wish to cancel, comment ‚Äúdeny‚Äù or "no"

  deploy-uat:
    needs: await-approval
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token:     ${{ secrets.AWS_SESSION_TOKEN }}  
          aws-region:            us-east-1

      - name: Setup kubectl
        run: |
          KUBECTL_VERSION=$(curl -sL https://dl.k8s.io/release/stable.txt)
          echo "Fetched KUBECTL_VERSION=$KUBECTL_VERSION"
          curl -LO https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          kubectl version --client

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region us-east-1 --name ${CLUSTER_NAME}

      - name: Patch images in base manifests
        run: |
          sed -i "s|REPLACE_LOGIN_IMAGE|${ECR_REGISTRY}/login-service:${IMAGE_TAG}|g" k8s/base/login-deploy.yaml
          sed -i "s|REPLACE_ORDER_IMAGE|${ECR_REGISTRY}/order-service:${IMAGE_TAG}|g" k8s/base/order-deploy.yaml
          sed -i "s|REPLACE_INVENTORY_IMAGE|${ECR_REGISTRY}/inventory-service:${IMAGE_TAG}|g" k8s/base/inventory-deploy.yaml
          sed -i "s|REPLACE_FRONTEND_IMAGE|${ECR_REGISTRY}/frontend-service:${IMAGE_TAG}|g" k8s/base/frontend-deploy.yaml

      - name: Create namespace
        run: |
          kubectl create namespace qa || echo "Namespace already exists"

      - name: Deploy to UAT namespace
        run: kubectl apply -k k8s/overlays/uat

      - name: Wait for UAT rollouts
        run: |
          for dep in login order inventory frontend; do
            kubectl rollout status deploy/$dep -n uat --timeout=120s
          done

      - name: UAT TEST - Test frontend microservice
        run: |
          HOST=$(kubectl get svc frontend -n uat -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "UAT frontend is at http://$HOST"
    
      - name: UAT TEST - Auth Endpoint Verification
        run: |
          curl -f "http://$HOST/login?user=admin&pass=password"

      - name: UAT TEST - Order List Render Check
        run: |
          curl -f "http://$HOST/orders"
      
      - name: UAT TEST - Inventory Visibility Test
        run: |
          curl -f "http://$HOST/inventory"

